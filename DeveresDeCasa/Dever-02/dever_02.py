# -*- coding: utf-8 -*-
"""Dever-02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1POBLd5TucTDtInE_Z549xdJY8OY_8PFq
"""

#Importar os módulos do sistema operacional

import os
import locale

#Instalar pt_BR

!/usr/share/locales/install-language-pack pt_BR
!dpkg-reconfigure locales pt_BR

#Reiniciar o processo Python

os.kill(os.getpid(), 9)

def get_user_phrase():
    """Solicita e valida a frase digitada pelo usuário"""

    print("1- Digite uma frase para ser analisada e pressione ENTER (teclado):")

    while True:
        frase = input("\nFrase: ")
        if not frase.strip():
            print("Erro: A frase não pode estar vazia. Por favor, tente novamente.")
        else:
            return frase

def dividir_frase(frase, separador=' '):
    """Divide a frase em palavras ou substrings usando o método split()"""
    return frase.split(separador)

def analisar_frase(frase):
    """Realiza todas as análises na frase conforme os requisitos"""
    total_caracteres = len(frase)

    # Dividir a frase em palavras usando split() padrão (por espaços)
    palavras = dividir_frase(frase)
    total_palavras = len(palavras)

    if not palavras:
        return total_caracteres, total_palavras, 0, []

    max_tamanho = max(len(palavra) for palavra in palavras)
    maiores_palavras = [palavra for palavra in palavras if len(palavra) == max_tamanho]

    return total_caracteres, total_palavras, max_tamanho, maiores_palavras

def inverter_frase_caracteres(frase):
    """Inverte a frase por meio dos caracteres"""
    return frase[::-1]

def inverter_ordem_palavras(frase):
    """Inverte a ordem das palavras e reconstroi a frase"""
    palavras = dividir_frase(frase)
    palavras_invertidas = palavras[::-1]
    return ' '.join(palavras_invertidas)

def converter_para_maiusculas(frase):
    """Converte a frase para todas as letras maiúsculas"""
    return frase.upper()

def converter_para_minusculas(frase):
    """Converte a frase para todas as letras minúsculas"""
    return frase.lower()

def criar_tupla_palavras(frase):
    """Cria uma tupla contendo todas as palavras da frase"""
    palavras = dividir_frase(frase)
    return tuple(palavras)

def main():
    # Obter a frase do usuário
    frase = get_user_phrase()

    # Exemplo de split por espaços (padrão)
    print(" ")
    print("\n2- Análise da Frase:")

    print("\nDivisão da frase em palavras (split por espaços):")
    palavras_split_espaco = dividir_frase(frase)
    print(palavras_split_espaco)

    # Realizar a análise da frase (usando split por espaços)
    total_caracteres, total_palavras, max_tamanho, maiores_palavras = analisar_frase(frase)

    # Exibir resultados da análise
    print(" ")
    print(f"Número total de caracteres: {total_caracteres}")
    print(" ")
    print(f"Número de palavras: {total_palavras}")
    print(" ")

    if maiores_palavras:
        if len(maiores_palavras) == 1:
            print(f"Maior palavra: '{maiores_palavras[0]}' com {max_tamanho} caracteres.")
        else:
            palavras_formatadas = ", ".join([f"'{p}'" for p in maiores_palavras])
            print(f"Maiores palavras: {palavras_formatadas} com {max_tamanho} caracteres cada.")
    else:
        print("Nenhuma palavra encontrada.")

    # 3. Manipulação e Formatação
    print(" ")
    print("\n3- Manipulação e Formatação:")

    # Inversão da Frase
    frase_invertida_caracteres = inverter_frase_caracteres(frase)
    print(f"\nInversão da frase por caracteres: {frase_invertida_caracteres}")

    frase_invertida_palavras = inverter_ordem_palavras(frase)
    print(f"Inversão da ordem das palavras: {frase_invertida_palavras}")

    # Alteração de Caixa
    frase_maiuscula = converter_para_maiusculas(frase)
    print(f"\nFrase em maiúsculas: {frase_maiuscula}")

    frase_minuscula = converter_para_minusculas(frase)
    print(f"Frase em minúsculas: {frase_minuscula}")

    # Tupla de Palavras
    tupla_palavras = criar_tupla_palavras(frase)
    print(f"\nTupla de palavras: {tupla_palavras}")

if __name__ == "__main__":
    main()

def get_user_phrase():
    """Solicita e valida a frase digitada pelo usuário"""

    print("1- Digite uma frase para ser analisada e pressione ENTER (teclado):")

    while True:
        frase = input("\nFrase: ")
        if not frase.strip():
            print("Erro: A frase não pode estar vazia. Por favor, tente novamente.")
        else:
            return frase

def dividir_frase(frase, separador=' '):
    """Divide a frase em palavras ou substrings usando o método split()"""
    return frase.split(separador)

def analisar_frase(frase):
    """Realiza todas as análises na frase conforme os requisitos"""
    total_caracteres = len(frase)

    # Dividir a frase em palavras usando split() padrão (por espaços)
    palavras = dividir_frase(frase)
    total_palavras = len(palavras)

    if not palavras:
        return total_caracteres, total_palavras, 0, []

    max_tamanho = max(len(palavra) for palavra in palavras)
    maiores_palavras = [palavra for palavra in palavras if len(palavra) == max_tamanho]

    return total_caracteres, total_palavras, max_tamanho, maiores_palavras

def inverter_frase_caracteres(frase):
    """Inverte a frase por meio dos caracteres"""
    return frase[::-1]

def inverter_ordem_palavras(frase):
    """Inverte a ordem das palavras e reconstroi a frase"""
    palavras = dividir_frase(frase)
    palavras_invertidas = palavras[::-1]
    return ' '.join(palavras_invertidas)

def converter_para_maiusculas(frase):
    """Converte a frase para todas as letras maiúsculas"""
    return frase.upper()

def converter_para_minusculas(frase):
    """Converte a frase para todas as letras minúsculas"""
    return frase.lower()

def criar_tupla_palavras(frase):
    """Cria uma tupla contendo todas as palavras da frase"""
    palavras = dividir_frase(frase)
    return tuple(palavras)

def main():
    # Obter a frase do usuário
    frase = get_user_phrase()

    # Realizar a análise da frase
    total_caracteres, total_palavras, max_tamanho, maiores_palavras = analisar_frase(frase)

    # Inversão da frase
    frase_invertida_caracteres = inverter_frase_caracteres(frase)
    frase_invertida_palavras = inverter_ordem_palavras(frase)

    # Alteração de caixa
    frase_maiuscula = converter_para_maiusculas(frase)
    frase_minuscula = converter_para_minusculas(frase)

    # Tupla de palavras
    tupla_palavras = criar_tupla_palavras(frase)

    # 4. Saída Formatada
    print(" ")
    print("\n4- Saída Formatada utilizando f-strings para exibir os resultados:")
    print("-" * 40)
    print(f"Número total de caracteres: {total_caracteres}")
    print(f"Número de palavras: {total_palavras}")

    if maiores_palavras:
        if len(maiores_palavras) == 1:
            print(f"Maior palavra: '{maiores_palavras[0]}' com {max_tamanho} caracteres.")
        else:
            palavras_formatadas = ", ".join([f"'{p}'" for p in maiores_palavras])
            print(f"Maiores palavras: {palavras_formatadas} com {max_tamanho} caracteres cada.")
    else:
        print("Nenhuma palavra encontrada.")

    print("-" * 40)
    print(f"Frase invertida (por caracteres): {frase_invertida_caracteres}")
    print(f"Frase invertida (por palavras): {frase_invertida_palavras}")
    print("-" * 40)
    print(f"Frase em maiúsculas: {frase_maiuscula}")
    print(f"Frase em minúsculas: {frase_minuscula}")
    print("-" * 40)
    print(f"Tupla de palavras: {tupla_palavras}")
    print("-" * 40)

if __name__ == "__main__":
    main()